using Kermalis.EndianBinaryIO;
using System;

namespace MIDIProgramSplitter.FLP;

internal struct FLPlaylistTrack
{
	private static ReadOnlySpan<byte> Part1 => new byte[15] { 0x00, 0x00, 0x48, 0x51, 0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x80, 0x3F };
	private static ReadOnlySpan<byte> Part2 => new byte[48]
	{
		0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00
	};

	public static void Write(EndianBinaryWriter w, int i)
	{
		w.WriteEnum(FLEvent.NewPlaylistTrack);
		FLProject.WriteTextEventLength(w, 66);
		w.WriteUInt16((ushort)(i + 1));
		w.WriteBytes(Part1);
		w.WriteByte(i <= 0x20 ? (byte)0xF0 : (byte)0xFF);
		w.WriteBytes(Part2);
	}
}
